ee/* 
05/07/2024

Three Differences Between Inline, Internal, and External CSS

--> Scope and Maintenance:

- Inline CSS: Affects only a single element. Difficult to maintain if many elements need the same style.
- Internal CSS: Affects a single HTML document. Easier to maintain than inline but limited to one document.
- External CSS: Affects multiple HTML documents. Most maintainable and scalable option for large projects.

--> Loading and Performance:

- Inline CSS: Loads quickly since styles are part of the HTML. Can bloat HTML file size.
- Internal CSS: Loads with the HTML document. Can slow down page rendering if the style block is large.
- External CSS: Separate file loading may cause additional HTTP requests, but it enables caching for faster subsequent loads.

--> Reusability:

- Inline CSS: Not reusable. Each element must be individually styled.
- Internal CSS: Reusable within the same document but not across multiple documents.
- External CSS: Highly reusable across multiple documents, ensuring a consistent look and feel.
*/


/* CSS Selectors */
/* 1. Tag Selector */
/* 2. Combinator Selector */
/* 3. Class Selector */
/* 4. ID Selector */
/* 5. Universal Selector */


/* 1. Tag Selector */

/* div{
    background-color: burlywood;
    border: 1px solid black;
} */


/* 2. Grouping | Combinator Selector */

/* div, span, p{
    background-color: orange;
} */


/* 3. Class Selector */

/* div{
    background-color: green;
}

.box1{
    background-color: darkcyan;
}

.box{
    background-color: yellow;
} */



/* 4. Id Selector */

/* #cont{
    background-color: darkcyan;
}

.container{
    background-color: green;
}


div{
    background-color: yellow;
} */



/* 5. Universal Selector */

/* 
*{
    background-color: red;
}

.box{
    background-color: yellow;
}

#cont{
    background-color: darkblue;
} 
*/


/* *{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.cont{
    width: 100vw;
    height: 100vh;
    background-color: burlywood;
    background-image: url("../Images/prac.jpg");
    background-repeat: no-repeat;
    background-size: cover;
}
 */



/* 06/07/2024 */
/* background & display prop */

/*
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

 .blockEle{
    width: 48vw;
    height: 48vh;
    background-color: blueviolet;
    display: inline-block;
}

.inlineEle{
    width: 48vw;
    height: 48vh;
    background-color: darkcyan;
    display: inline-block;
}


.parCont{
    width: 100vw;
    height: 100vh;
    background-color: darkcyan;
    display: grid;
    grid-template-columns: auto 600px 200px;
    gap: 20px;
    grid-template-rows: auto auto auto;
    column-gap: 50px;
    row-gap: 50px;
} 

.childCont{
    width: 200px;
    height: 100px;
    background-color: burlywood;
    border: 1px solid black;
}
 */



/* display flexbox */
/* The display: grid property in CSS is used to create a grid layout. It allows you to define rows and columns in a grid container, positioning child elements into a structured layout. */
/* The display: flex property in CSS is used to create a flexible box layout. It allows you to align and distribute space among items within a container, even when their sizes are unknown or dynamic. */

/*
.parCont{
    width: 100vw;
    height: 100vh;
    background-color: blueviolet;
     display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: center;
    flex-wrap: wrap;  
    align-content: space-between; 
}

.childCont{
    width: 200px;
    height: 100px;
    background-color: burlywood;
    border: 1px solid black;
}

.box1{
    position: absolute;
    z-index: 1;
    top: 150px;
    left: 180px; 
}

.box2{
    position: absolute;
}
*/


/* 09/07/2024 */


/* Box model */

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.container{
    width: 100vw;
    height: 100vh;
    background-color: burlywood;
    justify-content: center;
    align-items: center;
    display: flex;
}

/* .childBox1{
    width:400px;
    height: 200px;
    background-color: darkcyan;
    margin-left: 100px;
    margin-top: 100px;
    margin-bottom: 100px;
    margin-right: 100px;
} */

/* .childBox2{
    width:400px;
    height: 200px;
    background-color: rgb(97, 15, 197);
    margin: 80px 100px 120px 150px;
    margin-left: 100px;
    margin-top: 50px;
    margin-bottom: 100px;
    margin-right: 100px;
    padding: 20px 40px 90px 120px;
    padding-left: 50px;
    padding-top: 60px;
    padding-bottom: 90px;
    padding-right: 120px;
    border-width: 10px;
    border-style: solid;
    border-color: orange;
    margin: 0 0 0 100px;
    padding: 10px;
    border: 10px groove orange;
    border-top-left-radius: 20px;
    border-bottom-right-radius: 20px;
    border-radius: 6px;
} */

.childBox{
    width: 400px;
    height: 250px;
    background-color: aqua;
    padding: 20px;
    /* display: flex;
    align-items: center;
    justify-content: center; */
    font-size: 30px;
    font-family : sans-serif;
    /* font-style: oblique; */
    /* font-weight: 900; */
    /* text-decoration: underline wavy orange; */
    text-transform: uppercase;
    letter-spacing: 10px;
    /* text-shadow: -10px -10px 10px black; */
    text-align: center;
    align-content: center;
}

/* .childBox2 i{
    font-size: 100px;
} */



/* 10/07/2024 */
/* Size convention | Transform | Transition */

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* html{
    font-size: 15px;
}

.parCont{
    width: 80vw;
    height: 90vh;
    background-color: brown;
    font-size: 30px;
}

.childCont{
    width: 70%;
    height: 70%;
    background-color: bisque;
    font-size: 3rem;
} */

/* 
.box{
    width: 50%;
    height: 50%;
    background-color: darkcyan;
} */

.parCont{
    width: 100vw;
    height: 100vh;
    background-color: beige;
    align-content: center;
}

.childCont{
    width: 250px;
    height: 150px;
    background-color: darkblue;
    color: white;
    margin: auto;
    align-content: center;
    text-align: center;
    /* border: 200px ridge black; */
    /* transform: scale(2, 3); */
    /* transform: skew(20deg, 20deg); */
    /* transform: rotate(720deg); */
    /* transform: translateY(-300px); */
    cursor: pointer;
    transition-property: all;
    transition-duration: 2s;
    transition-delay: 2s;
    transition-timing-function: ease-in-out;
}

.childCont:hover{
    transform: scale(3);
    background-color: yellow;
    color: black;
}


/* 11/07/2024 */

    
    /* Pseudo Class */

    /* .childCont:hover{
        background-color: black;
        color: aqua;
    }
    
    .childCont a:link{
        color: white;
    }
    
    .childCont a:visited{
        color: green;
    }
    
    .childCont a:active{
        color: orange;
    }
    
    .parCont input{
        width: 20%;
        height: 10%;
    }
    
    .parCont input:focus{
        outline: none;
    } */
    

    /* Psuedo Element */

    /* .childCont p::first-letter{
        font-size: 180px;
        background-color: black;
        color: aqua;
    } */
    /* .childCont p::first-line{
        font-size: 100px;
        background-color: black;
        color: aqua;
    } */
    
    /* .childCont p::selection{
        font-style: italic;
        background-color: black;
        color: aqua;
    } */

    /* .parCont input{
        text-align: center;
        font-family: 'Courier New', Courier, monospace;
    }
    .parCont input::placeholder{
        color: orange;
        padding-left: 40px;
    } */
    
    
    
    *{
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .parCont{
        width: 100vw;
        height: 100vh;
        background-color: rgb(0, 0, 0);
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .childCont{
        width: 22%;
        height: 10%;
        background-color: transparent;
        font-size: 3.5em;
        color: aqua;
        letter-spacing: 5px;
        padding: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-family: Roboto;
        font-weight: 600;
        position: relative;
        cursor: pointer;
        /* transform-origin: left; */
    }

    .childCont::before{
        content: '';
        width: 100%;
        height: 5%;
        background-image: linear-gradient(to right, black, rgb(0, 94, 187));
        position: absolute;
        top: 0;
        left: 0;
        transform: scaleX(0);
        transition: transform 0.5s ease-in-out;
        transform-origin: right;
    }
    
    .childCont::after{
        content: '';
        width: 100%;
        height: 5%;
        background-image: linear-gradient(to right, black, rgb(0, 94, 187));
        position: absolute;
        bottom: 0;
        left: 0;
        transform: scaleX(0);
        transition: transform 0.5s ease-in-out;
        transform-origin: right;
    }

    .childCont:hover::before{
        transform: scaleX(1);
        transform-origin: left;
    }

    .childCont:hover::after{
        transform: scaleX(1);
        transform-origin: left;
    }




    /* 12/07/2024 */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.parentCont {
  width: 100vw;
  height: 100vh;
  background-color: black;
  align-content: center;
}

.childCont {
  width: 150px;
  height: 150px;
  background-color: bisque;
  text-align: center;
  align-content: center;
  font-size: 40px;
  margin: auto;
  transform: scale(1);
  animation-name: scaling;
  animation-duration: 2s;
  animation-timing-function: ease-in-out;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-delay: 2s;
}

@keyframes scaling {
  0% {
    transform: scale(0.5);
  }
  20% {
    transform: scale(1);
  }
  40% {
    transform: scale(2);
  }
  60% {
    transform: scale(1.5);
  }
  80% {
    transform: scale(3);
  }
  100% {
    transform: scale(2.5);
  }
}

@keyframes scaling {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(3);
  }
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.parentCont {
  width: 100vw;
  height: 100vh;
  background-color: black;
}

.childCont {
  width: 150px;
  height: 150px;
  background-color: bisque;
  text-align: center;
  align-content: center;
  font-size: 40px;
  animation-name: moving;
  animation-duration: 5s;
  animation-timing-function: ease-in-out;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-delay: 2s;
  position: relative;
}

@keyframes moving {
  0% {
    top: 0;
    left: 0;
    transform: rotate(0deg);
    background-color: bisque;
  }
  25% {
    top: 0;
    left: calc(100% - 150px);
    border-radius: 50%;
    border-radius: 50%;
    transform: rotate(360deg);
    background-color: aqua;
  }
  50% {
    top: calc(100% - 150px);
    left: calc(100% - 150px);
    border-radius: 0%;
    transform: rotate(0deg);
    background-color: darkcyan;
  }
  75% {
    top: calc(100% - 150px);
    left: 0;
    border-radius: 50%;
    transform: rotate(360deg);
    background-color: orange;
  }
  100% {
    top: 0;
    left: 0;
    border-radius: 0%;
    transform: rotate(0deg);
    background-color: bisque;
  }
}

/* Media Query */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.parentCont {
  width: 100vw;
  height: 100vh;
  background-color: black;
  display: flex;
}

.childCont {
  width: 250px;
  height: 100px;
  background-color: bisque;
  color: white;
  text-align: center;
  align-content: center;
  font-size: 40px;
  animation-name: moving;
  animation-duration: 5s;
  animation-timing-function: ease-in-out;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-delay: 2s;
  position: relative;
}

@media screen and (min-width: 820px) {
  .childCont {
    font-size: 20px;
  }
}

@media screen and (max-width: 420px) {
  .childCont {
    font-size: 16px;
  }
}


